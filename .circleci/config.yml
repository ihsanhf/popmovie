# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:

  build:
    docker:
      - image: circleci/android:api-27-alpha

    working_directory: ~/popmovie

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --no-daemon

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Assemble Debug
          command: |
              echo "Building Dev build without PROGUARD (but should be without proguard, workaround for maindex issue). Development"
              ./gradlew clean assembleDevDebug -PuseProguard=false -PbuildNumber=$CIRCLE_BUILD_NUM --parallel --max-workers=4 --no-daemon -PdisablePreDex --build-cache --stacktrace

      - run:
          name: Test Debug
          command: |
            echo "Running dev Tests"
            ./gradlew testDevDebug -PbuildNumber=$CIRCLE_BUILD_NUM --parallel --max-workers=4 --build-cache --stacktrace

  build_dev:
    docker:
      # specify the version you desire here
      - image: circleci/android:api-27-alpha

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/popmovie

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies --no-daemon

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Assemble Debug
          command: |
              echo "Building Dev build without PROGUARD (but should be without proguard, workaround for maindex issue). Development"
              ./gradlew clean assembleDevDebug -PuseProguard=false -PbuildNumber=$CIRCLE_BUILD_NUM --parallel --max-workers=4 --no-daemon -PdisablePreDex --build-cache --stacktrace

      - run:
          name: Test Debug
          command: |
            echo "Running dev Tests"
            ./gradlew testDevDebug -PbuildNumber=$CIRCLE_BUILD_NUM --parallel --max-workers=4 --build-cache --stacktrace

      - run:
          name: Apk info
          command: |
            apk=$(find ~/popmovie/app/build/outputs/apk/ -name '*.apk' -print -quit)
            echo $apk
            apkanalyzer dex references $apk

      - run:
          name: Release notes
          command: |
            mkdir -p dev
            touch dev/release_notes.txt
            echo "Debug build for regression testing `date '+%Y-%m-%d'`" >> dev/release_notes.txt
            git log `git describe --tags --abbrev=0 HEAD^`..HEAD --pretty=format:"%s // %an" >> dev/release_notes.txt

      - run:
          name: Put data to share in workflow
          command: |
            mkdir ~/popmovie/shared
            echo $CIRCLE_BUILD_NUM > shared/build_number
            echo $CIRCLE_BUILD_URL > shared/build_url
            git log -1 --pretty=format:"*%h* (%an): %s" > shared/build_title

      - persist_to_workspace:
          root: shared
          paths:
            - build_number
            - build_url
            - build_title

      - store_artifacts:
          path: app/build/outputs/apk/
          destination: apks/

      - store_artifacts:
          path: build_reports/
          destination: build_reports/

      - deploy:
          name: "Deploy to Staging build to Fabric"
          command: |
            echo "Branch: ${CIRCLE_BRANCH} , PR: ${CIRCLE_PULL_REQUEST}"
            if [ "${CIRCLE_BRANCH}" == "staging" -o "${CIRCLE_PULL_REQUEST}" != "" ]; then
              ./gradlew crashlyticsUploadDistributionStagingDebug --stacktrace --debug --no-daemon
            fi

workflows:
  version: 2
  default:
    jobs:
      - build:
        filters:
          tags:
            only: /.*/

  development:
    jobs:
      -build_dev:
        filters:
          tag:
            only: /develop
          branches:
            ignore: /.*/
