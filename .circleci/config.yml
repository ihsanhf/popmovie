version: 2
references:
  ## Workspaces
  workspace: &workspace
    ~/popmovie

  ## Docker image configurations
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TZ: "/usr/share/zoneinfo/Asia/Indonesia"
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx3g -Djava.util.concurrent.ForkJoinPool.common.parallelism=2"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError" -Dfile.encoding=utf-8 -Dkotlin.compiler.execution.strategy="in-proces"'

  android_config: &android_config_release
    working_directory: *workspace
    docker:
      - image: circleci/android:api-27-alpha
    environment:
      TZ: "/usr/share/zoneinfo/Asia/Indonesia"
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx3g -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=4"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx1536m -XX:+HeapDumpOnOutOfMemoryError" -Dfile.encoding=utf-8 -Dkotlin.compiler.execution.strategy="in-proces"'

  remove_properties: &remove_properties
    run:
      name: Removing gradle.properties
      command: rm -rf gradle.properties || true

  install_properties: &install_properties
    run:
      name: Setup environment
      command: bash ./misc/circleci_env_setup.sh

  accept_license: &accept_license
    run:
      name: Accepting License
      command: cp -r licenses/. $ANDROID_HOME/licenses

  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

  download_dependencies: &download_dependencies
    run:
      name: Download Dependencies
      command: ./gradlew androidDependencies --no-daemon

  save_gradle_cache: &save_gradle_cache
    save_cache:
      key: v1-dependencies-{{ checksum "build.gradle" }}
      paths:
        - ~/.gradle
        - ~/.m2

  share_workflow: &share_workflow
    run:
      name: Put data to share in workflow
      command: |
        mkdir ~/popmovie/shared
        echo $CIRCLE_BUILD_NUM > shared/build_number
        echo $CIRCLE_BUILD_URL > shared/build_url
        git log -1 --pretty=format:"*%h* (%an): %s" > shared/build_title

  persist_to_workspace: &persist_to_workspace
    persist_to_workspace:
      root: shared
      paths:
        - build_number
        - build_url
        - build_title

  store_artifacts: &store_artifacts
    store_artifacts:
      path: app/build/outputs/apk/
      destination: apks/

  store_report: &store_report
    store_artifacts:
      path: build_reports/
      destination: build_reports/

  ## Keys
#  decode_android_key: &decode_android_key
#    run:
#      name: Decode Android key store
#      command: echo $KEYSTORE | base64 -di | tee keystore.jks app/keystore.jks >/dev/null
#
#  create_google_play_key: &create_google_play_key
#    run:
#      name: Create Google Play key
#      command: echo $GOOGLE_PLAY_KEY > google-play-key.json

jobs:
  initialize:
    <<: *android_config
    steps:
      - checkout
#      - *accept_license
      - *remove_properties
      - *install_properties
      - *restore_gradle_cache
      - *download_dependencies
      - *save_gradle_cache

  test:
    steps:
      - *restore_gradle_cache
      - run:
          name: Running Test
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging"* ] || [ "${CIRCLE_BRANCH}" == "alpha"* ] ; then
              ./gradlew clean testStagingReleaseUnitTest -PBUILD_NUMBER=$CIRCLE_BUILD_NUM --parallel --max-workers=2 --no-daemon -PdisablePreDex --build-cache --stacktrace

            elif [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "release"* ] ; then
              ./gradlew clean testProductionReleaseUnitTest --parallel --max-workers=2 --no-daemon -PdisablePreDex --build-cache --stacktrace

            else
              ./gradlew clean testDevDebugUnitTest -PBUILD_NUMBER=$CIRCLE_BUILD_NUM --parallel --max-workers=2 --no-daemon -PdisablePreDex --build-cache --stacktrace

            fi

  build:
    steps:
      - *restore_gradle_cache
      - run:
          name: Building Project
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging"* ] || [ "${CIRCLE_BRANCH}" == "alpha"* ] ; then
              ./gradlew assembleStagingRelease -PBUILD_NUMBER=$CIRCLE_BUILD_NUM --parallel --max-workers=2 --no-daemon -PdisablePreDex --build-cache --stacktrace

            elif [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "release"* ] ; then
              ./gradlew assembleProductionRelease --parallel --max-workers=2 --no-daemon -PdisablePreDex --build-cache --stacktrace

            else
              ./gradlew assembleDevDebug -PBUILD_NUMBER=$CIRCLE_BUILD_NUM --parallel --max-workers=2 --no-daemon -PdisablePreDex --build-cache --stacktrace

            fi
      - run:
          name: Apk info
          command: |
            apk=$(find ~/popmovie/app/build/outputs/apk/ -name '*.apk' -print -quit)
            echo $apk
            apkanalyzer dex references $apk

  artifacts:
    steps:
      - *restore_gradle_cache
      - run:
          name: Release notes
          command: |
            if [ "${CIRCLE_BRANCH}" == "develop" ] ; then
              appVersion=$(grep appVersionString build.gradle | sed -e 's/ //g;s/.*appVersionString="//;s/".*//g')
              appVersionNumber=$(grep appVersionCode build.gradle | sed -e 's/[^0-9]//g')
              mkdir ~/popmovie/notes
              git log --pretty=format:"%s // %an" --since=3.weeks >> ~/popmovie/notes/$appVersion-$appVersionNumber
            fi
      - *share_workflow
      - *persist_to_workspace
      - *store_artifacts
      - *store_report

  deploy:
    steps:
      - *restore_gradle_cache
      - deploy:
          name: "Deploy to Fabric Beta"
          command: |
            echo "Branch: ${CIRCLE_BRANCH} , PR: ${CIRCLE_PULL_REQUEST}"
            if [ "${CIRCLE_BRANCH}" == "staging"* ] || [ "${CIRCLE_BRANCH}" == "alpha"* ] ; then
              ./gradlew crashlyticsUploadDistributionStagingRelease -PBUILD_NUMBER=$CIRCLE_BUILD_NUM --no-daemon

            elif [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "release"* ] ; then
              ./gradlew crashlyticsUploadDistributionProductionRelease --no-daemon

            else
              ./gradlew crashlyticsUploadDistributionDevDebug -PBUILD_NUMBER=$CIRCLE_BUILD_NUM --no-daemon

            fi

workflows:
  version: 2
  build_project:
    jobs:
      - initialize
      - test:
          requires:
            - initialize
      - build:
          requires:
            - test
      - artifacts:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
                - staging
                - alpha
                - release
                - /^staging/.*/
                - /^alpha/.*/
                - /^release/.*/
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
                - develop
                - staging
                - alpha
                - release
                - /^staging/.*/
                - /^alpha/.*/
                - /^release/.*/