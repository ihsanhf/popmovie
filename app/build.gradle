buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.25.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

def VERSION_NAME = getVersionName()
def VERSION_CODE = getVersionCode()

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"
    defaultConfig {
        applicationId "id.ihsan.popmovie"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                FABRIC_API_KEY: fabricApiKey
        ]

        def releaseNote = file("../" + getVersionName() + "-" + getVersionCodeOnly() + ".md")
        if (releaseNote.exists()) {
            ext.betaDistributionReleaseNotes = new File(releaseNote.absolutePath).getText('UTF-8')
        }
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            lintOptions {
                disable 'MissingTranslation'
            }
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            applicationIdSuffix ".dev"
        }

        staging {
            applicationIdSuffix ".stage"
        }

        production {

        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true;
    }

    testImplementation 'junit:junit:4.12'
}

def getVersionCode() {
    def buildNumStr = hasProperty('BUILD_NUMBER') ? getProperty('BUILD_NUMBER') : null
    def code = (buildNumStr == null || buildNumStr.isEmpty()) ? project.ext.appVersionCode : buildNumStr.toInteger()
    System.out.println("Code = " + code)
    return code
}

def getVersionCodeOnly() {
    def code = project.ext.appVersionCode
    System.out.println("Code = " + code)
    return code
}

def getVersionName() {
    def name = project.ext.appVersionString
    System.out.println("Name = " + name)
    return name
}
